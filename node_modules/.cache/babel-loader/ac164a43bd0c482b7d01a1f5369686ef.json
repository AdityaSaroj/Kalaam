{"remainingRequest":"/Users/jonny/Documents/Work/test/BharatBackup/node_modules/babel-loader/lib/index.js!/Users/jonny/Documents/Work/test/BharatBackup/src/FunctionScripts/MiscImportantFunctions.js","dependencies":[{"path":"/Users/jonny/Documents/Work/test/BharatBackup/src/FunctionScripts/MiscImportantFunctions.js","mtime":1588268682731},{"path":"/Users/jonny/Documents/Work/test/BharatBackup/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/jonny/Documents/Work/test/BharatBackup/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/Users/jonny/Documents/Work/test/BharatBackup/src/FunctionScripts/MiscImportantFunctions.js"],"names":["isCalculation","element","includes","charAt","length","RemoveBrackets","a","replace","b","c","d","Count","item","count","i","isArrayOperation","FindConditionValue","StringVar","StrVar","j","test","isNumber","push","handlemultConditions","condition","substring","SweepedElement","operator","CalculateValues","calculation","updated_tokens","IterationStart","calculationArray","SplitElementsArray","SetValues","value","eval","join","PushSetArrayIndexValue","tokens","data","type","ValueToSet","CreateArrayElement","Value","iterator","ArrayElement","Split","split","SetArrayorStringElement","NewValue","indexCollected","Element","find","el","name","token","indexOf","index","toString","PrintArrayElement","GetArrayorStringElement","flag","undefined","ForLoopArrayorStringOutput","elementValue","global","CurrentElement","FoundValue","output","forEach","ArrayElementValue","UpdateUpdated_tokenswithValues","payload","HandleConditions","sourcedata","SplitArray","Values","ForLoopConditionValue","InitializeLoop","AssignorUpdateValues","variable","varvalue","n","isPureEval","identifier","GetConditionValue","ConditionValue","MultConditionsCount","parseInt","BuiltMultConditonWithValues","LastResult","result"],"mappings":"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","sourcesContent":["\n\n\n\n            //ANCHOR - Important functions to be used while parsing\n\n           \n\n          function isCalculation(element) {\n\n               \n                    if ((element.includes(\"+\") || element.includes(\"-\") || element.includes(\"*\") || element.includes(\"/\")) && ((element.includes('(')&& element.includes(')')) || (!element.includes('(')&& !element.includes(')')) ) && element.charAt(element.length-1)!='+') {\n    \n                        return true\n                    \n    \n                }\n                }\n\nfunction RemoveBrackets(element){\n\n    let a = element.replace('(', '')\n    let b = a.replace(')', '')\n    let c = b.replace('}', '')\n    let d = c.replace('{', '')\n\n    return d\n\n}\nfunction Count(item, element) {\n\n    let count = 0\n\n\n    for (let i = 0; i < element.length; i++) {\n\n        if (element.charAt(i) == item && element.charAt(i + 1) == item) {\n\n            count += 1\n\n\n\n        }\n\n\n\n    }\n\n    return count;\n\n\n}\n\n\nfunction isArrayOperation(element){\n\n\n\n    //To find Patterns like Array[2], Array[index] etc\n\n    element=RemoveBrackets(element)\n\n    if(element.charAt(element.length-1)==']' && element.includes('[')&& element.charAt(0)!='['){\n\n\n        return true\n    }\n\n}\n\n\nfunction FindConditionValue(element)\n\n{\n\n    \n\n     if(element.includes('>')||element.includes('<') || element.includes('=='))\n\n     {\n\n\nelement=element.replace(/' '/g, '')\n\n\n\n     }\n\n   \n     \n\n    // console.log('element: ', element);\n\n  //get index of operation from updated tokens, as a reference\n\n   \n\n    var StringVar = [] // here StrVar values will get pushed\n    var StrVar = '' // its used to read var values of any type (anna,a,bad,x etc.) and push it to StringVar\n\n  \n\n\nfor (let j = 0; j < element.length; j++) {\n    \n\n\n        // find if element[j] is alphabet\n\n        if (/^[A-Z]+$/i.test(element[j])|| (element[j]=='['|| element[j]==']') || isNumber(element[j])) {\n\n\n         \n            StrVar = StrVar + element[j] //keep on pushing for long variable names as strings e.g anna,bad\n\n        }\n\n        if(element[j]==')' || element[j]=='('){\n\n\n                StringVar.push(element[j])\n\n        }\n        \n\n//to solve [\"Age \"] into [\"Age\"], so that it can correctly find its value in updated_tokens⁄\n\n        if(element[j]==' ' && element[j+1]!='+')\n        {\nStrVar = StrVar + element[j] \n\n////////console.log(12,element[j]);\n\n\n        }\n\n\n\n//for checking equivalency\n        if((element[j]=='=' && element[j+1]=='='))\n        {\n\nStringVar.push(StrVar)\nStringVar.push(element[j]+element[j+1])\nStrVar = ''\n////////console.log(StrVar)\n\n\n\n        }\n          if (element[j] == \"+\" || element[j] == \"-\" || element[j+1]==')'|| element[j] == \"/\" || element[j] == \"*\" || element[j]=='>' || element[j]=='<') {\n\n\n\n\n            StringVar.push(StrVar)//push whatever string we have got because it's a string now, cant push operators with it\n\n           //finding the calculations that required brackets and adding them\n\n           if(element[j+1]!=')')\n           {\n\n            StringVar.push(element[j])// fixing the bias\n\n           }\n\n      \n\n            StrVar = '' // emptyig the StrVar for next variable\n\n\n        }\n        if (element[j + 1] == null) {\n\n            StringVar.push(StrVar) //fixing bias for last element\n\n           // //////console.log(StrVar);\n\n            \n        }\n\n\n\n    }\n\n    //console.log('StringVar: ', StringVar);\n            return StringVar\n            \n            \n            \n}\n\nfunction handlemultConditions(element) {\n\n\n    for (let i = 0; i < element.length; i++) {\n\n\n\n        if ((element.charAt(i) == '&') || (element.charAt(i) == '|'))\n\n\n        {\n\n\n            let condition = element.substring(0, i + 2)\n\n            let SweepedElement = element.replace(condition, \"\")\n            let operator = ''\n\n\n\n            if ((element.charAt(i) == '&')) {\n                condition = condition.replace('&&', '')\n                operator = '&&'\n\n            } else if ((element.charAt(i) == '|')) {\n                condition = condition.replace('||', '')\n                operator = '||'\n\n            }\n\n\n            return {\n                SweepedElement,\n                condition,\n                operator\n            }\n\n\n\n\n\n\n\n            break;\n\n        }\n\n\n\n\n    }\n\n\n}\n\n\n\n\n\n\nfunction CalculateValues(calculation,j,updated_tokens,IterationStart)\n\n\n\n\n{\n   //console.log('calculation,j,updated_tokens,IterationStart: ', calculation,j,updated_tokens,IterationStart);\n\n    let calculationArray = SplitElementsArray(calculation, j)\n    //console.log('calculationArray: ', calculationArray);\n\n    \n    \n   let StringVar = SetValues(calculationArray, updated_tokens)\n\n\n  // console.log('StringVar: ', StringVar);\n  let value = eval(StringVar.join(''))\n\n  return value\n    \n}\n\n\nfunction PushSetArrayIndexValue(value,tokens,data,i) {\n    \n    \n\n\n    \n\n    \n    tokens.push({\n        type: \"SetArrayIndexValue\",\n        value: value,\n        ValueToSet:data[i+2] //skipping =\n    });\n\n}\n\n\nfunction CreateArrayElement(Value,iterator)\n{\n\n    \n                       let ArrayElement = RemoveBrackets(Value);\n\n                       //Seprating out index identifier. xyz from Array[xyz]\n                       let element= ArrayElement\n                       element = element.replace(']', '')\n\n                       \n                       let Split= element.split('[')\n                       //console.log('Split: ', Split[1]);\n\n\n                 \n                        Split[1]=iterator\n\n                    \n\n                       \n\n\n   \n                      Split= Split.join('[')\n                      //console.log('Split: ', Split);\n\n                      Split=Split+']'\n                   ArrayElement=Split\n\n\n                      ArrayElement = ArrayElement.replace(/' '/g, '')\n\n\n                      return ArrayElement\n\n}\n\n\n//This function is used to get array or string elements. e.g Array[2], String[5] \n//Heavily used in Forloop module\n\n\n\nfunction SetArrayorStringElement(ArrayElement,updated_tokens,iterator,NewValue,tokens){\n//console.log('ArrayElement,updated_tokens,iterator,NewValue,tokens: ', ArrayElement,iterator,NewValue);\n    \n    \n    ArrayElement = ArrayElement.replace(']', '')\n \n    let Split= ArrayElement.split('[')\n  \n    let indexCollected= Split[1]\n\n\n    let Element= updated_tokens.find(el=> el.name==NewValue)\n\n//If element is an assigned variable. Find the value and set it.\n\n    if(Element){\n        if(isCalculation(NewValue)){\n  \n            // This is to set x= y*100, Array[i]= x+ageone. \n        \n        let token= tokens.find(el=> el.value==NewValue)\n        let j= tokens.indexOf(token)-1\n        \n        \n        let value= CalculateValues(NewValue, j,updated_tokens  )\n        \n        NewValue=value\n        \n        }\n\nNewValue=Element.value\n\n    }\n\nif(iterator==true){\n\n//for Array[a]=a\n\n\nif(isCalculation(NewValue)){\n\n\n}\n\nelse{\n\nNewValue=indexCollected\n\n}\n}\n\n//if fresh newvalue is foumd. the one which doesnt yet exist in the program, then run this.\n    else{\n\n        NewValue=NewValue\n    }\n\n\n    \n    \n\n    let token= updated_tokens.find(el=> el.name==Split[0])\n    \nlet index= updated_tokens.indexOf(token)\n\n    //updated_tokens values will also get updated thrugh this reference\n    let value=token.value\n\n    value=value.toString()\n\n    value= value.replace(']', '')\n     value= value.replace('[', '')\n     value=value.split(',')\n     \n \n    \n\n    if(iterator==true){\n\n        //This is for Array[a]=a\n\n        value[indexCollected]=indexCollected\n\n\n    }\n    else{\n\n        //Run when iterator is not needed. iterator is present in ArrayEleMENT ALREADY. This is for Array[i]='Swanand'\n\n        value[indexCollected]= NewValue\n        \n\n       \n        \n\n\n    }\n\nupdated_tokens[index].value=value\n\n\n\n}\n\n\nfunction PrintArrayElement(ArrayElement, updated_tokens )\n\n{\n\n    ArrayElement = ArrayElement.replace(']', '')\n \n    let Split= ArrayElement.split('[')\n    ////console.log('Split: ', Split);\n  \n    let indexCollected= Split[1]\n\n    let token= updated_tokens.find(el=> el.name==Split[0])\n  \n  \n  \n    let value=token.value\n    \n   return value[indexCollected]\n\n    \n\n\n\n\n} \nfunction GetArrayorStringElement(element,updated_tokens,NewValue,flag) {\n  \n   element = element.replace(']', '')\n \n  let Split= element.split('[')\n  ////console.log('Split: ', Split);\n\n  let indexCollected= Split[1]\n\n  if(isNumber(indexCollected))\n  {\n\n\n  let token= updated_tokens.find(el=> el.name==Split[0])\n  \n  \n  let index= updated_tokens.indexOf(token)\n  \n  let value=token.value.toString()\n\n \n  \n\n  if(token.type=='Array')\n{\n\n    \n     value= value.replace(']', '')\n     value= value.replace('[', '')\n     value=value.split(',')\n\n\n    if(NewValue!=undefined )\n    {\n\n        if(!isNumber(NewValue)){\n\n            NewValue=NewValue.replace(/\"/g,'')\n            NewValue=NewValue.replace(/“/g,'')\n            NewValue=NewValue.replace(/'/g,'') \n            NewValue=NewValue.replace(/‘/g,'')\n        }\n        else{\n\n            NewValue=NewValue\n        }\n\n////console.log('NewValue: ', NewValue);\n\n\nvalue[indexCollected]=NewValue\n////console.log('value: ', value);\n\nupdated_tokens[index].value=value\n\n\n\n\n\n    }\n    \nelse{\n\n\n    value= value[indexCollected];\n    //////console.log('indexCollected: ', indexCollected);\n    //////console.log('value: ', value);\n\n    \n}\n  \n    \n\n\n}\n\nif(token.type=='string')\n{\n\n\n    \n    value= value.charAt(indexCollected);\n\n\n\n}\n\n \n  \n\nreturn value\n  } \n \n  \n\n}\n\n\nfunction ForLoopArrayorStringOutput(elementValue,iterator,updated_tokens,global)\n\n{\n\n\nlet CurrentElement=''\n\n\nCurrentElement=elementValue.name+'['+iterator+']'\n//Foundvalue is decided in the function depending upon the type. \n//if it's array run array[2], if its string run string.charAt(2)\nlet FoundValue= GetArrayorStringElement(CurrentElement,updated_tokens)\n\n\nglobal.output = global.output + FoundValue + \"\\n\";\n\n\n\n}\n\n\n\n\nfunction isNumber(element) {\n\n    \n    if (/^[0-9]*$/gm.test(element)) {\n        return true;\n    \n}\n};\n\n\n\nfunction SplitElementsArray(element,i)\n\n\n\n  {\n\n  \n\n//removing the \"(\"\" and \")\"\n    // element = RemoveBrackets(element)\n\n/*seperate execution\nif(element.includes('&&') || element.includes('||'))\n    {\n\n        console.log('element: ', element);\n\n        element=element.replace(/ /g,'')\n\n\n\n        \n\n       let ConditionArray=element.split('&&');\n       let ConditionArraywithValues=[]\n       \n\n       ConditionArray.forEach((element,i)=>{\n           \n\n\n       ConditionArraywithValues.push(FindConditionValue(element))   \n\n\n       })\n\n     return ConditionArraywithValues\n\n    }\n*/\n   \n       \n\n\n       return FindConditionValue(element)   \n        \n      \n\n\n\n         \n\n\n  }\n\n\n    \n  function SetValues(StringVar,updated_tokens)\n  \n  \n{\n\n   // console.log('StringVar,updated_tokens: ', StringVar,updated_tokens);\n\nStringVar.forEach((el, i) => \n    \n    {\n\n\n\nif(el.charAt(el.length-1)==']')\n{\n\nlet ArrayElementValue= GetArrayorStringElement(el,updated_tokens)\n\nArrayElementValue=ArrayElementValue.replace(/['\"]+/g,'')\n\nStringVar[i] = ArrayElementValue\n\n\n\n\n}      //finding variable values here \n\nel = el.replace(/\\ /g, '');\n\n        let token = updated_tokens.find(element => element.name == el);\n        //console.log('token: ', token,el);\n\n        ////////console.log(updated_tokens);\n\n      // //////console.log(12,token);\n\n\n\n        if (token != undefined) {\n\n            // if exists set it's value \n            StringVar[i] = token.value\n\n\n\n        }\n\n       // //////console.log(StringVar)\n\n\n    })\n\n\nreturn StringVar\n\n\n\n\n\n\n}\n\n\n\n\n\n//ANCHOR \n    //Now we hae converted found \"anna+bad-d\" into [anna,+,bad,-,d]\n\n    //Now lets run a loops on it to convert into [5,+,6,-,7]\n\n    //global is important\n    //Updated_tokens is updated by replacing \"value:anna+bad-d\" with \"value:5+6-7\". \n    //after eval function it will be set as \"value:2\"\n\n\nfunction UpdateUpdated_tokenswithValues(payload,i,updated_tokens)\n{\n\nlet StringVar=payload\n\n\n\n//run if it's arithmetic operation like [\"5+6-7\"]\n    if(isNumber(StringVar[0]))\n    {\n\n   \n   let value = eval(StringVar.join(''))\n\n   return value\n\n    }\n\n    \n\n    //run if it's String operation like [\"swanand kadam\",\"+\", \"is goat\"]\n\n    else {\n\n\n        \n        \n       \n       if(StringVar.includes(\"+\"))\n       {\n\n            StringVar[StringVar.indexOf(\"+\")]=\" \"\n\n           \n       }\n\n       \n\n        \n        \n        let value =StringVar.join(\"\")\n        \n\n        return value\n    }\n\n}\n\n\n\nfunction HandleConditions(sourcedata,i,updated_tokens)\n{\n\n                                let element = sourcedata[i].value\n                                    //\n\n                                //let token= updated_tokens.find(el=> el.originalvalue==sourcedata[i].value)\n\n\n\n\n                                let SplitArray = SplitElementsArray(element, i)\n\n                                let Values = SetValues(SplitArray, updated_tokens)\n\n                                let ForLoopConditionValue = UpdateUpdated_tokenswithValues(Values, updated_tokens, i)\n                                \n\n\n                                if (ForLoopConditionValue == false) {\n\n                                    let InitializeLoop = tokens.indexOf(sourcedata[i])\n\n\n\n\n                                    while (sourcedata[i + 1].value != '}')\n\n\n\n\n                                    {\n\n\n\n                                        // \n                                        //tokens.splice(i+1, 1);\n\n                                        //No need to delete tokens, we are iust skipping over the values so that they won't be printed or run\n\n                                        i++;\n\n\n\n\n                                    }\n\n\n\n\n                                }\n\n\n\n\n}\n\nfunction AssignorUpdateValues(sourcedata,i,updated_tokens){\n\n\n\n    let variable = sourcedata[i - 1].value\n//\n    let varvalue = sourcedata[i + 1].value\n\n    //\n\n    //\n\n    //finding if elements is already assgined in updated tokens\n    //to solve name='swanand' and name= 'other swanand'\n    //both shpuld be printed accordinggly\n\n\n    let n = updated_tokens.find((el, i) => el.name == variable)\n    \n\n\n\n    // \n\n\n\n    if (n == undefined) {\n\n\n\n        //to check if the assigned value needs to be calculated. this is futher diveded in two types\n        if (isCalculation(varvalue))\n\n        {\n\n\n\n            //type 1- Age= 2020-2000 \n            if (isPureEval(varvalue))\n\n\n\n            {\n\n                let value = eval(varvalue)\n\n                //write function for this, so repeatable\n                updated_tokens.push({\n                    name: variable,\n\n                    value: value,\n\n                    identifier: i,\n                    type: sourcedata[i + 1].type\n                })\n\n\n            }\n\n            //type 2- X= ageone+agetwo\n            else {\n\n                //performing the calculation\n                let value = CalculateValues(varvalue, i, updated_tokens)\n\n\n\n                updated_tokens.push({\n                    name: variable,\n\n                    value: value,\n\n                    identifier: i,\n                    type: sourcedata[i + 1].type\n                })\n\n\n\n            }\n\n\n\n        }\n\n\n        //if there is no need to calculate, push values as it is\n        else {\n\n            updated_tokens.push({\n                name: variable,\n\n                value: varvalue,\n\n                identifier: i,\n                type: sourcedata[i + 1].type\n            })\n\n\n        }\n\n\n    }\n\n\n\n\n    //if it's already assgined, reassign it with updated value\n    else {\n\n\n        if (isCalculation(varvalue)) {\n\n            let NewValue = CalculateValues(varvalue, i, updated_tokens)\n            n.value = NewValue\n\n\n        } else {\n\n            n.value = varvalue\n        }\n\n\n\n\n\n    }\n    //\n\n\n\n}\n\n\n\n\nfunction GetConditionValue(element,updated_tokens,j){\n\n\n    var ConditionValue=false\n\n    if (element.includes('&&') || element.includes('||')) {\n   \n   \n                          \n                           let MultConditionsCount = parseInt(Count('&', element)) + parseInt(Count('|', element))\n                           \n   \n   \n                           //this will be our final values\n                           //converted as true&&false&&true||true\n                           let BuiltMultConditonWithValues = ''\n                           let LastResult = {}\n   \n   \n                           //running for loop on original condition to calculates each individual condition and adding its value in BuiltMultConditonWithValues\n   \n                           for (let i = 0; i <= MultConditionsCount; i++)\n   \n                           {\n   \n   \n   \n   \n   \n                               if (i == MultConditionsCount) {\n   \n   \n   \n                                   let condition = LastResult.SweepedElement\n                                   condition = condition.replace(/ /g, '')\n   \n   \n                                   let SplitArray = SplitElementsArray(condition, j)\n   \n                                   let Values = SetValues(SplitArray, updated_tokens)\n   \n   \n                                   ConditionValue = UpdateUpdated_tokenswithValues(Values, updated_tokens, j)\n   \n   \n   \n   \n                                   BuiltMultConditonWithValues = BuiltMultConditonWithValues + ConditionValue\n   \n   \n                               } else {\n   \n   \n                                   let result = handlemultConditions(element)\n   \n                                   LastResult = result\n   \n   \n                                   element = result.SweepedElement\n                                   let condition = result.condition\n                                   condition = condition.replace(/ /g, '')\n   \n   \n   \n   \n                                   let SplitArray = SplitElementsArray(condition, j)\n   \n                                   //\n   \n   \n   \n                                   let Values = SetValues(SplitArray, updated_tokens)\n                                       // \n   \n   \n                                   ConditionValue = UpdateUpdated_tokenswithValues(Values, updated_tokens, j)\n   \n   \n   \n   \n                                   BuiltMultConditonWithValues = BuiltMultConditonWithValues + ConditionValue + result.operator\n   \n   \n   \n                               }\n   \n   \n                           }\n   \n   \n                           //setting the final condition value in cases like अगर (ageone==10 && AverageAge<1000 && agetwo>100 || ageone==10) \n   \n                           ConditionValue = eval(BuiltMultConditonWithValues);\n                           \n   \n   \n   \n                       } else {\n   \n                           //let token= updated_tokens.find(el=> el.originalvalue==mutable_tokens[j].value)\n   \n                           let SplitArray = SplitElementsArray(element, j)\n   \n                           \n   \n   \n   \n                           let Values = SetValues(SplitArray, updated_tokens)\n                           \n   \n                           //Setting the final condition value in cases like अगर (ageone==10) \n   \n                           ConditionValue= UpdateUpdated_tokenswithValues(Values, updated_tokens, j)\n                           \n   \n                       }\n   \n//console.log('ConditionValue: ', ConditionValue);\n   return ConditionValue\n   \n   \n                    }  \n   \n\n\n\nexport {HandleConditions,AssignorUpdateValues,PushSetArrayIndexValue,isArrayOperation, GetConditionValue ,PrintArrayElement,CalculateValues,handlemultConditions,CreateArrayElement,SetArrayorStringElement, RemoveBrackets,ForLoopArrayorStringOutput, GetArrayorStringElement,SplitElementsArray, SetValues, UpdateUpdated_tokenswithValues}"]}]}