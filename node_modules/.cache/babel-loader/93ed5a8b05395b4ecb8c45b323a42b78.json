{"remainingRequest":"/Users/jonny/Documents/Work/test/node_modules/thread-loader/dist/cjs.js!/Users/jonny/Documents/Work/test/node_modules/babel-loader/lib/index.js!/Users/jonny/Documents/Work/test/src/FunctionScripts/functions.js","dependencies":[{"path":"/Users/jonny/Documents/Work/test/src/FunctionScripts/functions.js","mtime":1592302290709},{"path":"/Users/jonny/Documents/Work/test/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/jonny/Documents/Work/test/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/jonny/Documents/Work/test/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMucmVnZXhwLmV4ZWMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5zdHJpbmcucmVwbGFjZSI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnN0cmluZy5zcGxpdCI7CgpmdW5jdGlvbiBTb3VyY2VEYXRhUmVwbGFjZWZvckVhc3lQYXJzaW5nKGRhdGEpIHsKICBkYXRhID0gZGF0YS5yZXBsYWNlKC/gpKrgpY3gpLDgpL/gpILgpJ8vZywgIiDgpKrgpY3gpLDgpL/gpILgpJ8gIik7CiAgZGF0YSA9IGRhdGEucmVwbGFjZSgvXCggL2csICcoJyk7IC8vIGRhdGEgPSBkYXRhLnJlcGxhY2UoL1wpL2csICcgKScpOwogIC8vICBkYXRhID0gZGF0YS5yZXBsYWNlKC9cKyAvZywgJysnKTsKCiAgZGF0YSA9IGRhdGEucmVwbGFjZSgvXD0gIi9nLCAnPSInKTsKICBkYXRhID0gZGF0YS5yZXBsYWNlKC9cPSAnL2csICI9JyIpOwogIGRhdGEgPSBkYXRhLnJlcGxhY2UoL1zgpJzgpKzgpKTgpJUvZywgJ+CknOCkrOCkpOCklSAnKTsKICBkYXRhID0gZGF0YS5yZXBsYWNlKC9c4KSF4KSo4KWN4KSv4KSl4KS+ey9nLCAn4KSF4KSo4KWN4KSv4KSl4KS+IHsnKTsKICBkYXRhID0gZGF0YS5yZXBsYWNlKC9cWyAvZywgJ1snKTsKICBkYXRhID0gZGF0YS5yZXBsYWNlKC9cKX0vZywgJykgfScpOwogIGRhdGEgPSBkYXRhLnJlcGxhY2UoL1wpey9nLCAnKSB7Jyk7CiAgZGF0YSA9IGRhdGEucmVwbGFjZSgvXH19L2csICd9IH0nKTsKICBkYXRhID0gZGF0YS5yZXBsYWNlKC9c4KSV4KWLL2csICfgpJXgpYsgJyk7CiAgZGF0YSA9IGRhdGEucmVwbGFjZSgvXOCkruClh3svZywgJ+CkruClhyB7Jyk7CiAgZGF0YSA9IGRhdGEucmVwbGFjZSgvXOCkheCkl+CksC9nLCAn4KSF4KSX4KSwICcpOwogIGRhdGEgPSBkYXRhLnJlcGxhY2UoLyg/OlxyXG58XHJ8XG4pL2csICcgJyk7CiAgZGF0YSA9IGRhdGEucmVwbGFjZSgvXD09L2csICcgPT0gJyk7IC8vcHJlcGFyaW5nIGRhdGEgZm9yIGVhc3kgcGFyc2luZyBieSBoYW5kbGluZyBuZXcgbGluZXMsIGVudGVycyBldGMuCgogIGRhdGEgPSBkYXRhLnJlcGxhY2UoLyg7fFxufFxyfCcgJ3wgJ3wgIikvZ20sICIiKS5zcGxpdCgnICcpOwogIHJldHVybiBkYXRhOwp9CgpleHBvcnQgeyBTb3VyY2VEYXRhUmVwbGFjZWZvckVhc3lQYXJzaW5nIH07"},{"version":3,"sources":["/Users/jonny/Documents/Work/test/src/FunctionScripts/functions.js"],"names":["SourceDataReplaceforEasyParsing","data","replace","split"],"mappings":";;;;AAAA,SAASA,+BAAT,CAAyCC,IAAzC,EACI;AAEIA,EAAAA,IAAI,GAAGA,IAAI,CAACC,OAAL,CAAa,SAAb,EAAwB,UAAxB,CAAP;AACAD,EAAAA,IAAI,GAAGA,IAAI,CAACC,OAAL,CAAa,MAAb,EAAqB,GAArB,CAAP,CAHJ,CAIG;AACD;;AACED,EAAAA,IAAI,GAAGA,IAAI,CAACC,OAAL,CAAa,OAAb,EAAsB,IAAtB,CAAP;AACAD,EAAAA,IAAI,GAAGA,IAAI,CAACC,OAAL,CAAa,OAAb,EAAsB,IAAtB,CAAP;AAKAD,EAAAA,IAAI,GAAGA,IAAI,CAACC,OAAL,CAAa,QAAb,EAAuB,OAAvB,CAAP;AACAD,EAAAA,IAAI,GAAGA,IAAI,CAACC,OAAL,CAAa,WAAb,EAA0B,UAA1B,CAAP;AAECD,EAAAA,IAAI,GAAGA,IAAI,CAACC,OAAL,CAAa,MAAb,EAAqB,GAArB,CAAP;AACAD,EAAAA,IAAI,GAAGA,IAAI,CAACC,OAAL,CAAa,MAAb,EAAqB,KAArB,CAAP;AACAD,EAAAA,IAAI,GAAGA,IAAI,CAACC,OAAL,CAAa,MAAb,EAAqB,KAArB,CAAP;AACAD,EAAAA,IAAI,GAAGA,IAAI,CAACC,OAAL,CAAa,MAAb,EAAqB,KAArB,CAAP;AACAD,EAAAA,IAAI,GAAGA,IAAI,CAACC,OAAL,CAAa,MAAb,EAAqB,KAArB,CAAP;AACFD,EAAAA,IAAI,GAAGA,IAAI,CAACC,OAAL,CAAa,OAAb,EAAsB,MAAtB,CAAP;AACED,EAAAA,IAAI,GAAGA,IAAI,CAACC,OAAL,CAAa,OAAb,EAAsB,MAAtB,CAAP;AACAD,EAAAA,IAAI,GAAGA,IAAI,CAACC,OAAL,CAAa,iBAAb,EAAgC,GAAhC,CAAP;AACAD,EAAAA,IAAI,GAAGA,IAAI,CAACC,OAAL,CAAa,MAAb,EAAqB,MAArB,CAAP,CAvBL,CAyBI;;AACAD,EAAAA,IAAI,GAAGA,IAAI,CAACC,OAAL,CAAa,uBAAb,EAAsC,EAAtC,EAA0CC,KAA1C,CAAgD,GAAhD,CAAP;AAEA,SAAOF,IAAP;AAEH;;AAOL,SAAQD,+BAAR","sourcesContent":["function SourceDataReplaceforEasyParsing(data)\n    {\n    \n        data = data.replace(/प्रिंट/g, \" प्रिंट \");\n        data = data.replace(/\\( /g, '('); \n       // data = data.replace(/\\)/g, ' )');\n      //  data = data.replace(/\\+ /g, '+');\n        data = data.replace(/\\= \"/g, '=\"');\n        data = data.replace(/\\= '/g, \"='\");\n\n       \n\n        \n        data = data.replace(/\\जबतक/g, 'जबतक ');\n        data = data.replace(/\\अन्यथा{/g, 'अन्यथा {');\n        \n         data = data.replace(/\\[ /g, '[');\n         data = data.replace(/\\)}/g, ') }');\n         data = data.replace(/\\){/g, ') {');\n         data = data.replace(/\\}}/g, '} }');\n         data = data.replace(/\\को/g, 'को ');\n       data = data.replace(/\\मे{/g, 'मे {'); \n         data = data.replace(/\\अगर/g, 'अगर ');\n         data = data.replace(/(?:\\r\\n|\\r|\\n)/g, ' ');\n         data = data.replace(/\\==/g, ' == ');\n\n        //preparing data for easy parsing by handling new lines, enters etc.\n        data = data.replace(/(;|\\n|\\r|' '| '| \")/gm, \"\").split(' ')\n\n        return data\n        \n    }\n\n\n\n\n    \n     \nexport {SourceDataReplaceforEasyParsing}\n\n\n"]}]}