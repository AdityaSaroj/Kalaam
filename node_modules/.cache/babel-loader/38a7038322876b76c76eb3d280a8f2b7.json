{"remainingRequest":"/Users/jonny/Documents/Work/test/node_modules/thread-loader/dist/cjs.js!/Users/jonny/Documents/Work/test/node_modules/babel-loader/lib/index.js!/Users/jonny/Documents/Work/test/node_modules/vuetify-loader/lib/loader.js??ref--17-0!/Users/jonny/Documents/Work/test/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/jonny/Documents/Work/test/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/jonny/Documents/Work/test/src/views/Documentation.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/jonny/Documents/Work/test/src/views/Documentation.vue","mtime":1592314750353},{"path":"/Users/jonny/Documents/Work/test/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/jonny/Documents/Work/test/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/jonny/Documents/Work/test/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/jonny/Documents/Work/test/node_modules/vuetify-loader/lib/loader.js","mtime":1574476662000},{"path":"/Users/jonny/Documents/Work/test/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/jonny/Documents/Work/test/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KaW1wb3J0IEhlYWRlciBmcm9tICcuLi9jb21wb25lbnRzL0hlYWRlcic7CmltcG9ydCB7IG1hcFN0YXRlIH0gZnJvbSAndnVleCc7CmV4cG9ydCBkZWZhdWx0IHsKICBkYXRhOiBmdW5jdGlvbiBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgc2hvd1N0YXIwOiBmYWxzZSwKICAgICAgc2hvd1N0YXIxOiBmYWxzZSwKICAgICAgc2hvd1N0YXIyOiBmYWxzZSwKICAgICAgc2hvd1N0YXIzOiBmYWxzZSwKICAgICAgc2hvd1N0YXI0OiBmYWxzZSwKICAgICAgc2hvd1N0YXI1OiBmYWxzZSwKICAgICAgc2hvd1N0YXI2OiBmYWxzZSwKICAgICAgc2hvd1N0YXI3OiBmYWxzZSwKICAgICAgc2hvd1N0YXI4OiBmYWxzZQogICAgfTsKICB9LAogIGNvbXBvbmVudHM6IHsKICAgIEhlYWRlcjogSGVhZGVyCiAgfSwKICBjb21wdXRlZDogbWFwU3RhdGUoWydDdXJyZW50Q29kZSddKSwKICBtZXRob2RzOiB7CiAgICBDb3B5Q29kZTogZnVuY3Rpb24gQ29weUNvZGUoZWwpIHsKICAgICAgdmFyIGNvcHlUZXh0ID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoZWwpOwogICAgICBjb25zb2xlLmxvZygnY29weVRleHQ6ICcsIGNvcHlUZXh0KTsKICAgICAgdGhpcy4kc3RvcmUuc3RhdGUuQ3VycmVudENvZGUgPSBjb3B5VGV4dC5pbm5lckhUTUw7CiAgICAgIGNvbnNvbGUubG9nKCd0aGlzLiRzdG9yZS5zdGF0ZS5DdXJyZW50Q29kZTogJywgdGhpcy4kc3RvcmUuc3RhdGUuQ3VycmVudENvZGUpOwogICAgICB0aGlzLiRyb3V0ZXIucHVzaCgnL1ByYWN0aXNlJyk7CiAgICB9CiAgfQp9Ow=="},{"version":3,"sources":["Documentation.vue"],"names":[],"mappingsurBA,OAAA,MAAA,MAAA,sBAAA;AAEA,SAAA,QAAA,QAAA,MAAA;AAEA,eAEA;AACA,EAAA,IADA,kBACA;AACA,WAAA;AACA,MAAA,SAAA,EAAA,KADA;AAEA,MAAA,SAAA,EAAA,KAFA;AAGA,MAAA,SAAA,EAAA,KAHA;AAIA,MAAA,SAAA,EAAA,KAJA;AAKA,MAAA,SAAA,EAAA,KALA;AAMA,MAAA,SAAA,EAAA,KANA;AAOA,MAAA,SAAA,EAAA,KAPA;AAQA,MAAA,SAAA,EAAA,KARA;AASA,MAAA,SAAA,EAAA;AATA,KAAA;AAYA,GAdA;AAgBA,EAAA,UAAA,EAAA;AACA,IAAA,MAAA,EAAA;AADA,GAhBA;AAyBA,EAAA,QAAA,EAAA,QAAA,CAAA,CAAA,aAAA,CAAA,CAzBA;AA4BA,EAAA,OAAA,EAAA;AAEA,IAAA,QAAA,EAAA,kBAAA,EAAA,EAEA;AAGA,UAAA,QAAA,GAAA,QAAA,CAAA,cAAA,CAAA,EAAA,CAAA;AACA,MAAA,OAAA,CAAA,GAAA,CAAA,YAAA,EAAA,QAAA;AAGA,WAAA,MAAA,CAAA,KAAA,CAAA,WAAA,GAAA,QAAA,CAAA,SAAA;AACA,MAAA,OAAA,CAAA,GAAA,CAAA,iCAAA,EAAA,KAAA,MAAA,CAAA,KAAA,CAAA,WAAA;AAGA,WAAA,OAAA,CAAA,IAAA,CAAA,WAAA;AAIA;AAnBA;AA5BA,CAFA","sourcesContent":["<template>\n  <div class=\"about\">\n     <Header/>\n\n    <div>\n<button  v-on:click=\"showStar0 = !showStar0\"  type=\"button\" class=\"collapsible\">प्रिंट()</button>\n\n<transition name=\"slide-fade\">\n<div v-if=\"showStar0\" class=\"content\">\n\n<div>\n\n<h2>Usage</h2>\n\n<h5> Print characters on the output screen</h5>\n\n<h2>Implementation</h2>\n\n<h4>1: Print a Declared Variable </h4>\n<p>Name=\"Hello World\" </p>  \n<p>प्रिंट(Name) </p>  \n<p>    </p>\n\n<h4>2: Print a Direct String </h4>\n<p>प्रिंट(\"Hello World\")</p> \n<p>प्रिंट(007)</p> \n\n<h4>3: Print a Multi/Concatenated String </h4>\n<p>Name=\"Kalam\" </p> \n<p>प्रिंट(\"Hello World,\" + \"My Name is\" + Name + \"!\")</p> \n\n\n</div>\n\n<div>\n <button id=\"TryCodebtn\" @click=\"CopyCode('CodeID1')\">Play with the Code</button>\n<p id=\"CodePara\" >\n\n\n<pre id=\"CodeID1\" >\n\n\n#PRINT A DECLARED VARIABLE\n\nName=\"Hello World\"   \nप्रिंट(Name)   \n\n#PRINT A DIRECT STRING\n\nप्रिंट(\"Tic Tac Toe\") \nप्रिंट(007) \n\n#PRINT A MULTI/CONCANATED STRING\n\nName=\"Kalam\"  \nप्रिंट(\"Hello World,\" + \"My Name is\" + Name + \"!\") \n\n\n \n\n</pre>\n</p>\n</div>\n\n\n</div>\n\n</transition>\n<button   v-on:click=\"showStar1 = !showStar1\"  type=\"button\" class=\"collapsible\">रचना</button>\n<transition name=\"slide-fade\">\n<div v-if=\"showStar1\" class=\"content\">\n\n<div>\n\n<h2>Usage</h2>\n\n<h5> Reusable code wrapped inside a block, also known as a function.</h5>\n\n<h2>Implementation</h2>\n\n<h4>1: Define a Function </h4>\n<h3>रचना <i>FunctionName</i> (<i>argument1</i> ,<i>argument2</i> ) </h3>  \n<h5><b>Function Name</b></h5>  \n<p>Function names are case sensitive and should contain only alphabet letters </p>  \n<h5> <b>Function Arguments</b>  </h5>  \n<p>Function Arguments set themselves with temporary values that are passed inside a function when a function is called. </p>  \n<p>Arguments names are also case sensitive Argument names are your choice but should contain only alphabet letters.</p> \n\n\n\n\n<h4>2: Calling a Function </h4>\n<h3><i>FunctionName</i> (<i>argument1</i> ,<i>argument2</i> ) </h3> \n<h5><b>Function Name- PrintFullName</b>  </h5>  \n<p>While calling function, make sure that the Function name declaration is same as a function call. <br> For e.g PrintFullName≠printfullname  </p>  \n\n<h2> Example</h2>\n<h5><b>Define Variables</b></h5>\n<h5>FirstName- 'Sachin' </h5> \n<h5>LastName- 'Tendulkar' </h5> \n\n<h5><b> Function declaration</b></h5>\n <h5>PrintFullName (x, y) </h5> \n\n <h5><b> Function Body</b></h5>\n <h5>{</h5>\n <h5>प्रिंट( x + y ) </h5> \n <h5>}</h5>\n\n<h5><b>Function call</b>  </h5>  \n<h5>PrintFullName(FirstName,LastName)</h5>\n\n<p>While calling function, make sure that the Function name declaration is same as a function call. <br> For e.g PrintFullName≠printfullname  </p>  \n\n<h5> <b>Function Argument Values Passed- ('Sachin','Tendulkar')</b>  </h5>  \n<p>As per the grammer set under the hood of this programming language, ( x , y ) will become ('Sachin','Tendulkar').  </p>\n<p>x will take a temporary value of 'Sachin'</p>\n<p>y will take a temporary value of 'Tendulkar'</p>\n\n\n\n</div>\n\n<div>\n <button id=\"TryCodebtn\" @click=\"CopyCode('CodeID2')\">Play with the Code</button>\n<p id=\"CodePara\" >\n\n\n<pre id=\"CodeID2\" >\n\n\n\n#YOU CAN PRE DEFINE THE VARIABLES\n#YOU CAN ALSO ACCEPT THEM AS INPUT  \n\nFirstName='Sachin'\n\nLastName='Tendulkar'\n\nNewFirstName='Sunil'\n\nNewLastName='Chetri'\n\n#FUNCTION DECLARATION- NAME YOUR FUNCTION AND ARGUMENTS\n\nरचना PrintFullName(First,Last)\n\n{\n\nप्रिंट(First + Last)\n\n\n\n}\n\n#FUNCTION EXECUTION EXAMPLES- PASS THE DIFFERENT DESIRED VALUES AS ARGUMENTS\n\nPrintFullName(FirstName,LastName)\n\nPrintFullName(NewFirstName,NewLastName)\n\n\n\n#FUNCTION EXAMPLE 2\n\nJob='Doctor'\nCity='Pune'\n\n#FUNCTION DECLARATION- NAME YOUR FUNCTION AND ARGUMENTS\n\nरचना AboutMe(x,y)\n\n{\n\n\n\nप्रिंट(\"I am a\" + x + \"in\" + y)\n\n\n}\n\n#FUNCTION EXECUTION\n\n\nAboutMe(Job,City)\n\n\n \n\n\n \n\n \n\n</pre>\n</p>\n</div>\n\n\n\n</div>\n</transition>\n</div>\n<button   v-on:click=\"showStar2 = !showStar2\"  type=\"button\" class=\"collapsible\">इनपुट()</button>\n\n<transition name=\"slide-fade\">\n<div v-if=\"showStar2\" class=\"content\">\n<div>\n\n<h2>Usage</h2>\n\n<h5> Accept an Input and set it to a Variable </h5>\n\n<h2>Implementation</h2>\n\n<h4>1: Pass a Variable inside <i> इनपुट() </i></h4>\n<h5>इनपुट(<i> YourVariable </i>)</h5>  \n\n<h2> Example</h2>\n\n<h5>इनपुट(Name)</h5> \n<p>If you have entered <i>Kalam</i>  as input then complier will set <b> Name=\"Kalam\".</b> </p> \n<p>Once the value is set, you can use that variable value throughout the program. </p> \n\n\n\n</div>\n\n<div>\n <button id=\"TryCodebtn\" @click=\"CopyCode('CodeID1')\">Play with the Code</button>\n<p id=\"CodePara\" >\n\n\n<pre id=\"CodeID1\" >\n\n\n#PASS A VARIABLE TO GRAB THE VALUE\n\nइनपुट(Name)\n\n#CHECK THE ACCEPTED VARIABLE VALUE\n \nप्रिंट(Name)\n\n\n \n\n</pre>\n</p>\n</div>\n</div>\n</transition>\n<button   v-on:click=\"showStar3 = !showStar3\"  type=\"button\" class=\"collapsible\">अगर()</button>\n<transition name=\"slide-fade\">\n<div v-if=\"showStar3\" class=\"content\">\n<div>\n\n<h2>Usage</h2>\n\n<h5> Allow code execution on a certain condition. Evaluates to TRUTH or False  </h5>\n\n<h2>Implementation</h2>\n\n<h4>1: Pass a Single Condition to Evaluate in अगर() </h4>\n<h5> अगर (Language=='kalam') </h5>  \n<h5> अगर (Age > 18) </h5>  \n<p><b> The accepted comparison operators are: </b>  </p>\n<p><b>></b> - Greater than</p>\n<p><b><</b> -  Less than</p>\n<p><b>==</b> - is Equal to</p>\n<p><b>!=</b> - is Not Equal to</p>\n\n\n\n<h4>2: Pass a Multi Condition to Evaluate in अगर() </h4>\n<h5>अगर (Age>16 && Education =='ssc')</h5> \n<h5>अगर (Country=='india' || Language=='hindi')</h5> \n\n\n<p><b> The accepted comparison operators are: </b> </p>\n<p><b>&&</b> - If BOTH of the conditions are true, evaluates to TRUE</p>\n<p><b>||</b> - If ONE of the conditions is true, evaluates to TRUE</p>\n\n\n</div>\n\n<div>\n <button id=\"TryCodebtn\" @click=\"CopyCode('CodeID1')\">Play with the Code</button>\n<p id=\"CodePara\" >\n\n\n<pre id=\"CodeID1\" >\n\n#ACCEPT AN INPUT\n\nइनपुट(language)\n\n#EVALUATE THE CONDITION\n\nअगर(language=='kalam')\n\n{\n\n#IF CONDITION IS TRUE, RUN THIS.\n\nप्रिंट('Alright, that's cool!')\n\n\n}\n\n\nEXAMPLE 2\n\n#ACCEPT INPUTS\n\nइनपुट(language)\n\nइनपुट(country)\n\n#EVALUATE THE CONDITION\n\nअगर(language=='kalam' || country=='india')\n{\n\n#IF ONE OF THE CONDITION IS TRUE, RUN THIS\n\n\nप्रिंट('That works too.')\n\n\n}\n\n\n\n \n\n</pre>\n</p>\n</div>\n</div>\n</transition>\n\n<button   v-on:click=\"showStar8 = !showStar8\"  type=\"button\" class=\"collapsible\">अन्यथा</button>\n<transition name=\"slide-fade\">\n<div v-if=\"showStar8\" class=\"content\">\n<div>\n\n<h2>Usage</h2>\n\n<h5> Run a block of code if none of the conditions are satisfied</h5>\n\n<h2>Implementation</h2>\n\n<h4>1: Define  </h4>\n<h5>अन्यथा </h5>  \n\n<p> Please note that अन्यथा does not take any arguments even if it has open brackets.     </p>\n<p>I just didn't want to snatch that superpower away fom her.</p>\n\n\n\n</div>\n\n<div>\n <button id=\"TryCodebtn\" @click=\"CopyCode('CodeID1')\">Play with the Code</button>\n<p id=\"CodePara\" >\n\n\n<pre id=\"CodeID1\" >\n\n\n#ACCEPT AN INPUT\n\nlanguage='kalam'\n\n#EVALUATE THE CONDITION\n\nअगर(language=='kalam')\n\n{\n\n#IF CONDITION IS TRUE, RUN THIS.\n\nप्रिंट('Alright, that's cool!')\n\n\n}\n\n#IF NONE OF THE CONDITIONS ARE SATISFIED, RUN THIS.\n\nअन्यथा\n{\n\nप्रिंट('Sorry, that did not worked!')\n\n\n\n}\n\n\n\n \n\n</pre>\n</p>\n</div>\n</div>\n</transition>\n\n\n<button   v-on:click=\"showStar4 = !showStar4\"  type=\"button\" class=\"collapsible\">दुहराओ x को y मे</button>\n<transition name=\"slide-fade\">\n<div v-if=\"showStar4\" class=\"content\">\n<div>\n\n<h2>Usage</h2>\n\n<h5> Run a particular code multiple times</h5>\n\n<h2>Implementation</h2>\n\n<h4>1: Define the loop </h4>\n<h5> <b> दुहराओ x को y मे </b></h5>  \n\n<p> Here y is a range and can be defined as (0,10), (5,100) etc.  </p>\n<p> Here x is an index or iterator. For e.g x takes values from 1 and 10 (both inclusive) in (0,10)  </p>\n\n<h5> <b> दुहराओ x को City मे </b></h5>  \n <p>Here instead of a custom range we iterate it over the length of variable.</p>  \n <p>Basically, if City='Pusad', the range will be automatically set as (0,5) because length of 'Pusad' is 5. </p>\n<p>    </p>\n\n\n\n\n</div>\n\n<div>\n <button id=\"TryCodebtn\" @click=\"CopyCode('CodeID1')\">Play with the Code</button>\n<p id=\"CodePara\" >\n\n\n<pre id=\"CodeID1\" >\n\n#EXAMPLE 1  \n\n#DEFINE A RANGE AND AN ITERATOR\n\nदुहराओ x को (0,10) मे\n\n{\n\nvalue= x*5\n\nप्रिंट(value)\n\n}\n\n\n#EXAMPLE 2  \n\n#DEFINE A VARIABLE AND AN ITERATOR\n\nName=\"HALF COOKED RICE\"\n\nदुहराओ y को Name मे\n\n{\n\nvalue=Name[y]\n\nप्रिंट(value + y)\n\n}\n\n\n\n\n\n \n\n</pre>\n</p>\n</div>\n</div>\n</transition>\n<button   v-on:click=\"showStar5 = !showStar5\"  type=\"button\" class=\"collapsible\">जबतक()</button>\n<transition name=\"slide-fade\">\n<div v-if=\"showStar5\" class=\"content\">\n<div>\n\n<h2>Usage</h2>\n\n<h5>Run a particular code until a certain condition is met</h5>\n\n<h2>Implementation</h2>\n\n<h4>1: Define </h4>\n<h5>जबतक(<i>YourCondition</i> ) </h5>  \n\n<p><b> The accepted comparison operators are: </b>  </p>\n<p><b>></b> - Greater than</p>\n<p><b><</b> -  Less than</p>\n<p><b>==</b> - is Equal to</p>\n<p><b>!=</b> - is Not Equal to</p>\n\n<h2> Example</h2>\n\n<h5> <b>जबतक(count<25)</b> </h5> \n<p>The code will run until the condition evaluates itself to true. </p> \n<p>When the value of count reaches 26, code execution will stop. </p> \n\n\n\n\n</div>\n\n<div>\n <button id=\"TryCodebtn\" @click=\"CopyCode('CodeID1')\">Play with the Code</button>\n<p id=\"CodePara\" >\n\n\n<pre id=\"CodeID1\" >\n\n\n\ncount=0\n\n#EVALUATE THE CONDITION. IF TRUE, KEEP ON RUNNING.\n\nजबतक(count<25)\n{\n\nप्रिंट(count)\n\n#UPDATE THE VALUE OF COUNT ON EACH ITERATION\n\ncount=count+1\n\n\n}\n\n\n\n\n\n \n\n</pre>\n</p>\n</div>\n</div>\n</transition>\n<button   v-on:click=\"showStar6 = !showStar6\"  type=\"button\" class=\"collapsible\">.संख्या()</button>\n<transition name=\"slide-fade\">\n<div v-if=\"showStar6\" class=\"content\">\n<div>\n\n<h2>Usage</h2>\n\n<h5> Directly find out the length of a String or Array</h5>\n\n<h2>Implementation</h2>\n\n<h4>1: Define</h4>\n<h5> <i>YourVariable</i>.संख्या() </h5>  \n\n<h2> Example</h2>\n\n<h5> <b>City.संख्या()</b> </h5> \n<p>If City='Banglore' then City.संख्या() will output the value <b>8</b>  </p> \n<p>If City=['Pusad','Pune','Mumbai','Delhi'] then City.संख्या() will output the value <b>4</b> </p> \n\n\n\n</div>\n\n<div>\n <button id=\"TryCodebtn\" @click=\"CopyCode('CodeID1')\">Play with the Code</button>\n<p id=\"CodePara\" >\n\n\n<pre id=\"CodeID1\" >\n\n\n#DEFINE THE VARIABLES. EITHER STRING OR ARRAY\n\nCity='Banglore'\n\nCities=['Pusad','Pune','Mumbai','Delhi']\n\n#FIND OUT THE LENGTH\n\nCitylength= City.संख्या()\n\nCitieslength=Cities.संख्या()\n\n#PRINT THE LENGTH\n\n#CAN YOU PRINT THE LENGTH WITHOUT USING \".संख्या()\"\" ?\n\nप्रिंट('The length of the City is' + Citylength )\n\nप्रिंट('The length of the Cities is' + Citieslength )\n\n\n\n\n \n\n</pre>\n</p>\n</div>\n</div>\n</transition>\n<button   v-on:click=\"showStar7 = !showStar7\"  type=\"button\" class=\"collapsible\">.पुश()</button>\n<transition name=\"slide-fade\">\n<div v-if=\"showStar7\" class=\"content\">\n<div>\n\n<h2>Usage</h2>\n\n<h5> Push values to array</h5>\n\n<h2>Implementation</h2>\n\n<h4>1: Push Value to an Array </h4>\n<h5> <i>ArrayName</i> =[] </h5>  \n<h5>ArrayName.पुश(<i>YourValue</i>) </h5>  \n\n\n\n\n</div>\n\n<div>\n <button id=\"TryCodebtn\" @click=\"CopyCode('CodeID1')\">Play with the Code</button>\n<p id=\"CodePara\" >\n\n\n<pre id=\"CodeID1\" >\n\n\n\n#EXAMPLE 1\n\nNumbers=[]\n\nदुहराओ x को (1,10)\n\n{\n\n#PUSH CURRENT VALUE OF X INTO NUMBERS ARRAY\n\nNumbers.पुश(x)\n\n\n}\n\nप्रिंट(Numbers)\n\n\n#EXAMPLE 2\n\nNumbers=[]\n\n\n\n#PUSH DEFINED VALUES TO A DEFINED ARRAY. \n\n\nName='Swanand'\nRole='Developer'\n\n#IN THIS CASE ARRAY IS NUMBERS\n\nNumbers.पुश(value)\nNumbers.पुश('hii')\n\n\nप्रिंट(Numbers)\n\n\n\n \n\n</pre>\n</p>\n</div>\n</div>\n</transition>\n\n  </div>\n</template>\n<script>\nimport Header from '../components/Header'\n\nimport { mapState } from 'vuex'\n\nexport default\n\n{\ndata() {\n  return {\n    showStar0: false,\n    showStar1: false,\n    showStar2: false,\n    showStar3: false,\n    showStar4: false,\n    showStar5: false,\n    showStar6: false,\n    showStar7: false,\n    showStar8: false,\n      }\n\n    }\n,\n   components:{\n    Header\n\n\n    },\n\n\n\n\n  computed: mapState(['CurrentCode']),\n\n\n  methods: {\n      \nCopyCode:function(el)\n\n{\n\n\n var copyText = document.getElementById(el);\n console.log('copyText: ', copyText);\n\n\nthis.$store.state.CurrentCode= copyText.innerHTML\nconsole.log('this.$store.state.CurrentCode: ', this.$store.state.CurrentCode);\n\n\n  this.$router.push('/Practise')\n\n\n\n}\n      \n  },\n}\n\n</script>\n<style scoped>\n\n.collapsible {\n     background-color: rgb(236, 236, 236);\n    color: rgb(0, 0, 0);\n    cursor: pointer;\n    padding: 18px;\n    width: 90%;\n    border: none;\n    text-align: left;\n    outline: none;\n    font-size: 110%;\n    font-weight: 500;\n    border: solid 0.5px;\n    margin-top: 2%;\n}\n.collapsible:hover {\n\n       background-color: rgb(236, 214, 87);\n\n\n}\n\n\n\n\n.about{\n\n\n  display: inline-block;\n  width: 100%;\n      margin-bottom: 10%;\n}\n\n.content {\n    overflow: hidden;\n    background-color: #fdfbfb;\n   \n    display: flex;\n    text-align: left;\n        width: 90%;\n    margin-left: 5%;\n}\n\n\n.content div:nth-child(1){\n\n\n  width: 55%;\n  padding-right: 7%;\n    font-size: large;\n    margin-left: 2%\n}\n\n.content div:nth-child(2){\n\n\n  width: 45%;\n    margin-top: 4%;\n    background-color: #f1f1f1;\n    padding-left: 2%;\n    height: fit-content;\n}\n\n\nh3{\n\n  margin-bottom: 0\n}\n\npre{\n\n  margin-top: 0;\n  font-size: 111%;\n}\n\nh2{\n\n      margin-top: 6%;\n    margin-bottom: 6%;\n    color: #144577;\n\n}\n\n#TryCodebtn\n{\n\nmargin-top: 3%;\n\n}\n\n#CodePara{\n\n     \n    width: 100%;\n    text-align: left;\n  \n    font-size: 100%;\n}\n\nh4{\n\n  color: #acb708;\n}\n.slide-fade-enter-active {\n  transition: all .3s ease;\n}\n.slide-fade-leave-active {\n  transition: all .2s ease-out cubic-bezier(1.0, 0.5, 0.8, 1.0);\n}\n.slide-fade-enter, .slide-fade-leave-to\n/* .slide-fade-leave-active below version 2.1.8 */ {\n  transform: translateY(10px);\n  opacity: 0;\n}\nh5{\n \n    color: black;\n    font-family: inherit;\n    font-weight: 400;\n\n}\np{\n\n  font-size: 90%;\n  margin-top: 6%\n}\n\n@media only screen\nand (max-width : 480px) {\n\n.content{\n\n\n  display: grid;\n  padding: 0;\n  width: 90%;\n  padding-left: 3%;\n  margin-top: 2%\n}\n\n.content div:nth-child(1)\n{\n\n\n  width: 90%\n}\n\n.content div:nth-child(2)\n{\n\n\n  width: 95%;\n  overflow: auto\n}\n.about{\n\n  width: 100%;\n  margin-top: 3%\n}\n\n\n}\n\n\n</style>"],"sourceRoot":"src/views"}]}