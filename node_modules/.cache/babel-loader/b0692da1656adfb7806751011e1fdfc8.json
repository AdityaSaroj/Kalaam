{"remainingRequest":"/Users/jonny/Documents/Work/test/BharatBackup/node_modules/babel-loader/lib/index.js!/Users/jonny/Documents/Work/test/BharatBackup/src/FunctionScripts/AdvancedTypeChecking.js","dependencies":[{"path":"/Users/jonny/Documents/Work/test/BharatBackup/src/FunctionScripts/AdvancedTypeChecking.js","mtime":1587265144346},{"path":"/Users/jonny/Documents/Work/test/BharatBackup/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/jonny/Documents/Work/test/BharatBackup/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuaW5jbHVkZXMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5zdHJpbmcuaW5jbHVkZXMiOwpleHBvcnQgZnVuY3Rpb24gaXNQdXJlRXZhbCgpIHsKICByZXR1cm4gZnVuY3Rpb24gKGVsZW1lbnQpIHsKICAgIGlmICgvXihbLStdP1swLTldKlwuP1swLTldK1tcL1wrXC1cKl0pKyhbLStdP1swLTldKlwuP1swLTldKykqJC9nbS50ZXN0KGVsZW1lbnQpKSB7CiAgICAgIHJldHVybiB0cnVlOwogICAgfQogIH07Cn0gLy9pZiBwYXJzZXIgZW5jb3VudGVycyBhbnl0aGluZyBsaWtlICgiIG9yICgsIHRoZW4gdGhhdCdzIGEgcmVhbHRpbWUgcHJpbnQuIAovL2J1aWxkc3RyaW5nIHdpbGwgYmUgYXBwbGllZCBub3cgdG8gY3JlYXRlIGEgc3RyaW5nIGFuZCBwdXNoIGl0IGludG8gdG9rZW5zCgpleHBvcnQgZnVuY3Rpb24gaXNSZWFsVGltZVByaW50TXVsdGlwbGVTdHJpbmcoKSB7CiAgcmV0dXJuIGZ1bmN0aW9uIChlbGVtZW50KSB7CiAgICB2YXIgY29uZGl0aW9uU3RhcnQgPSBlbGVtZW50LmNoYXJBdCgwKTsKICAgIHZhciBsYXN0Q2hhciA9IGVsZW1lbnQuY2hhckF0KGVsZW1lbnQubGVuZ3RoIC0gMSk7IC8vIGNvbnNvbGUubG9nKGVsZW1lbnQpCiAgICAvL1RIRSBQcmluY2lwbGUgY29uZGl0aW9uIHRvIHByb2NlZWQgYnVpbGRpbmcgYSBzdHJpbmcgYWZ0ZXIgaWRlbnRpZnl0aW5nIGl0IGFzIGEgcG90ZW50aWFsIHJlYWx0aW1lc3RyaW5nICAgCgogICAgaWYgKGNvbmRpdGlvblN0YXJ0ID09ICcoJyAmJiBsYXN0Q2hhciAhPSAnKScgfHwgZWxlbWVudC5pbmNsdWRlcygnKCInKSkgewogICAgICByZXR1cm4gdHJ1ZTsKICAgIH0KICB9Owp9CmV4cG9ydCBmdW5jdGlvbiBpc1N0cmluZ2FuZFZhbHVlKCkgewogIHJldHVybiBmdW5jdGlvbiAoZWxlbWVudCkgewogICAgdmFyIHggPSBlbGVtZW50OwoKICAgIGlmICh4LmluY2x1ZGVzKCciJykgJiYgeC5pbmNsdWRlcygnKycpKSB7CiAgICAgIHJldHVybiB0cnVlOwogICAgfQogIH07Cn0KZXhwb3J0IGZ1bmN0aW9uIGlzQ2FsY3VsYXRpb24oKSB7CiAgcmV0dXJuIGZ1bmN0aW9uIChlbGVtZW50KSB7CiAgICBpZiAoKGVsZW1lbnQuaW5jbHVkZXMoIisiKSB8fCBlbGVtZW50LmluY2x1ZGVzKCItIikgfHwgZWxlbWVudC5pbmNsdWRlcygiKiIpIHx8IGVsZW1lbnQuaW5jbHVkZXMoIi8iKSkgJiYgKGVsZW1lbnQuaW5jbHVkZXMoJygnKSAmJiBlbGVtZW50LmluY2x1ZGVzKCcpJykgfHwgIWVsZW1lbnQuaW5jbHVkZXMoJygnKSAmJiAhZWxlbWVudC5pbmNsdWRlcygnKScpKSAmJiBlbGVtZW50LmNoYXJBdChlbGVtZW50Lmxlbmd0aCAtIDEpICE9ICcrJyAmJiAoZWxlbWVudC5jaGFyQXQoMCkgIT0gJy8nIHx8IGVsZW1lbnQuY2hhckF0KDApICE9ICcqJykpIHsKICAgICAgcmV0dXJuIHRydWU7CiAgICB9CiAgfTsKfQpleHBvcnQgZnVuY3Rpb24gaXNEaXJlY3RQcmludEFyaXRobWV0aWMoKSB7CiAgcmV0dXJuIGZ1bmN0aW9uICh0b2tlbikgewogICAgaWYgKHRva2VuLmluY2x1ZGVzKCIrIikgfHwgdG9rZW4uaW5jbHVkZXMoIi0iKSB8fCB0b2tlbi5pbmNsdWRlcygiKiIpIHx8IHRva2VuLmluY2x1ZGVzKCIvIikpIHsKICAgICAgcmV0dXJuIHRydWU7CiAgICB9CiAgfTsKfQ=="},{"version":3,"sources":["/Users/jonny/Documents/Work/test/BharatBackup/src/FunctionScripts/AdvancedTypeChecking.js"],"names":["isPureEval","element","test","isRealTimePrintMultipleString","conditionStart","charAt","lastChar","length","includes","isStringandValue","x","isCalculation","isDirectPrintArithmetic","token"],"mappings":";;AAEA,OAAO,SAASA,UAAT,GAAqB;AAGxB,SAAO,UAASC,OAAT,EAAiB;AAExB,QAAG,+DAA+DC,IAA/D,CAAoED,OAApE,CAAH,EACA;AAEA,aAAO,IAAP;AAEC;AACJ,GARG;AAUa,C,CAKL;AACA;;AAEA,OAAO,SAASE,6BAAT,GAAyC;AAG5C,SAAO,UAASF,OAAT,EAAiB;AAGpB,QAAIG,cAAc,GAACH,OAAO,CAACI,MAAR,CAAe,CAAf,CAAnB;AACA,QAAIC,QAAQ,GAACL,OAAO,CAACI,MAAR,CAAeJ,OAAO,CAACM,MAAR,GAAe,CAA9B,CAAb,CAJoB,CAMrB;AAGF;;AAEb,QAAKH,cAAc,IAAE,GAAhB,IAAuBE,QAAQ,IAAE,GAAlC,IAA0CL,OAAO,CAACO,QAAR,CAAiB,IAAjB,CAA9C,EACA;AAIA,aAAO,IAAP;AAEC;AAEY,GApBD;AAqBH;AAGG,OAAO,SAASC,gBAAT,GAA4B;AAE/B,SAAO,UAASR,OAAT,EAAiB;AAExB,QAAIS,CAAC,GAACT,OAAN;;AAIhB,QAAGS,CAAC,CAACF,QAAF,CAAW,GAAX,KAAiBE,CAAC,CAACF,QAAF,CAAW,GAAX,CAApB,EACA;AAGA,aAAO,IAAP;AACC;AAIY,GAfG;AAgBP;AAIH,OAAO,SAASG,aAAT,GAAyB;AAE9B,SAAO,UAASV,OAAT,EAAiB;AAEpB,QAAI,CAACA,OAAO,CAACO,QAAR,CAAiB,GAAjB,KAAyBP,OAAO,CAACO,QAAR,CAAiB,GAAjB,CAAzB,IAAkDP,OAAO,CAACO,QAAR,CAAiB,GAAjB,CAAlD,IAA2EP,OAAO,CAACO,QAAR,CAAiB,GAAjB,CAA5E,MAAwGP,OAAO,CAACO,QAAR,CAAiB,GAAjB,KAAwBP,OAAO,CAACO,QAAR,CAAiB,GAAjB,CAAzB,IAAoD,CAACP,OAAO,CAACO,QAAR,CAAiB,GAAjB,CAAD,IAAyB,CAACP,OAAO,CAACO,QAAR,CAAiB,GAAjB,CAArL,KAAiNP,OAAO,CAACI,MAAR,CAAeJ,OAAO,CAACM,MAAR,GAAe,CAA9B,KAAkC,GAAnP,KAA2PN,OAAO,CAACI,MAAR,CAAe,CAAf,KAAmB,GAAnB,IAA0BJ,OAAO,CAACI,MAAR,CAAe,CAAf,KAAmB,GAAxS,CAAJ,EAAkT;AAE9S,aAAO,IAAP;AACH;AAEJ,GAPD;AAQC;AAEL,OAAO,SAASO,uBAAT,GAAkC;AAErC,SAAO,UAASC,KAAT,EAAe;AAClC,QAAMA,KAAK,CAACL,QAAN,CAAe,GAAf,KAAuBK,KAAK,CAACL,QAAN,CAAe,GAAf,CAAvB,IAA8CK,KAAK,CAACL,QAAN,CAAe,GAAf,CAA9C,IAAqEK,KAAK,CAACL,QAAN,CAAe,GAAf,CAA3E,EACA;AAEI,aAAO,IAAP;AACH;AAEY,GAPD;AAQH","sourcesContent":["\n\nexport function isPureEval(){\n\n\n    return function(element){\n\n    if(/^([-+]?[0-9]*\\.?[0-9]+[\\/\\+\\-\\*])+([-+]?[0-9]*\\.?[0-9]+)*$/gm.test(element))\n    {\n    \n    return true\n    \n    }\n}\n    \n                }\n    \n    \n            \n    \n            //if parser encounters anything like (\" or (, then that's a realtime print. \n            //buildstring will be applied now to create a string and push it into tokens\n    \n            export function isRealTimePrintMultipleString (){\n    \n    \n                return function(element){\n    \n    \n                    let conditionStart=element.charAt(0)\n                    let lastChar=element.charAt(element.length-1)\n    \n                   // console.log(element)\n    \n                    \n                 //THE Principle condition to proceed building a string after identifyting it as a potential realtimestring   \n    \n    if(((conditionStart=='(' && lastChar!=')') || element.includes('(\"') )  )\n    {\n    \n    \n    \n    return true\n    \n    }\n    \n                }\n            }\n    \n    \n                export function isStringandValue (){\n    \n                    return function(element){\n\n                    let x=element\n    \n    \n    \n    if(x.includes('\"')&&x.includes('+'))\n    {\n    \n    \n    return true;\n    }\n    \n    \n    \n                }\n            }\n    \n    \n                \n          export function isCalculation() {\n\n            return function(element){\n\n                if ((element.includes(\"+\") || element.includes(\"-\") || element.includes(\"*\") || element.includes(\"/\")) && ((element.includes('(')&& element.includes(')')) || (!element.includes('(')&& !element.includes(')')) ) && element.charAt(element.length-1)!='+' && (element.charAt(0)!='/' || element.charAt(0)!='*')) {\n\n                    return true\n                }\n\n            }\n            }\n\n        export function isDirectPrintArithmetic(){\n\n            return function(token){\nif( ( token.includes(\"+\") || token.includes(\"-\") || token.includes(\"*\") || token.includes(\"/\") )  )\n{\n\n    return true\n}\n\n            }\n        }"]}]}